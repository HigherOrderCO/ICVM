def T = λt λf t
def F = λt λf f
def And = λpλq dup #a p1 p2 = p; (p1 q p2)
def Z = λs λz (z)
def S = λn λs λz (s n)
def Node = λa λb λn λl (n a b)
def Leaf = λn λl l
def Alloc = @alloc λn (n (λp dup #a alloc1 alloc2 = alloc; dup #p p1 p2 = p; (Node (alloc1 p1) (alloc2 p2))) Leaf)
def Destroy = @destroy λt (t (λaλb dup #d destroy1 destroy2 = destroy; (And (destroy1 a) (destroy2 b))) T)
(Destroy (Alloc (S (S (S Z)))))
